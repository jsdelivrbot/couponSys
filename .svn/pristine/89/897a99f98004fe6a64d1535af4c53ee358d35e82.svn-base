<template>
  <el-card class="box-card">
    <el-form :model="ruleForm" :rules="rules" ref="ruleForm" label-width="100px" class="demo-ruleForm">
      <el-form-item class="item-two">
        <el-col :span="8">
          <el-form-item label="核销时间" prop="time">
            <el-date-picker :editable="false" :clearable="false" v-model="ruleForm.time" type="datetime" placeholder="选择日期时间">
            </el-date-picker>
          </el-form-item>
        </el-col>
        <el-col :span="8">
          <el-form-item label="核销人" prop="name">
            <el-input v-model="ruleForm.name" placeholder="请输入核销人" style="width:193px" :disabled="true"></el-input>
          </el-form-item>
        </el-col>
        <el-col :span="8">
          <el-form-item label="核销门店" prop="store">
            <el-select v-model="ruleForm.store" placeholder="请选择">
              <el-option v-for="(item,index) in fourshops" :label="item.NAME" :value="item.PK_FOURSPOINTMG+''"></el-option>

            </el-select>
          </el-form-item>
        </el-col>
      </el-form-item>
      <el-form-item class="item-two">

        <el-col :span="8">
          <el-form-item label="券类型" prop="type">
            <el-select v-model="ruleForm.type" placeholder="请选择">
              <el-option label="乐橙券" value="2"></el-option>
              <el-option label="外平台券" value="3"></el-option>
            </el-select>
          </el-form-item>
        </el-col>
        <el-col :span="16">
          <el-form-item label="劵码" prop="code">
            <el-input v-model="ruleForm.code" placeholder="请输入劵码" style="width:50%"></el-input>
          </el-form-item>
        </el-col>
      </el-form-item>
    </el-form>
    <el-row class="btn-group">
      <el-button type="primary" size="large" @click="handleCheck">确定</el-button>
    </el-row>
    <el-dialog title="确定核销信息" :visible.sync="addFormVisible" :close-on-click-modal="false" size="tiny">
      <el-card v-for="(item,index) in checkEntity" style="margin-bottom:10px">
        <el-tag type="primary">&nbsp;{{index+1}}&nbsp;</el-tag>
        <div class="card-box">
          <span class="search-span">会员名：</span>
          <span>{{item.memberName}}</span>
        </div>
        <div class="card-box">
          <span class="search-span">手机号：</span>
          <span>{{item.mobilephone}}</span>
        </div>
        <div class="card-box">
          <span class="search-span">券码：</span>
          <span>{{item.verificationCode}}</span>
        </div>
        <div class="card-box">
          <span class="search-span">使用门店：</span>
          <span>{{fourshopsName}}</span>
        </div>

      </el-card>
    
      <div slot="footer" class="dialog-footer">
        <el-button @click="addFormVisible = false">取消</el-button>
        <el-button type="primary" @click="handleSubmit">确定</el-button>
      </div>
    </el-dialog>
  </el-card>
</template>

<script>
  export default {
    name: 'verifypage',
    // props:['activeName'],
    data() {
      return {
        fourshops: [], //4s店
        addFormVisible: false,
        ruleForm: {
          time: '',
          name: '',
          store: '',
          type: '',
          code: ''
        },
        rules: {
          name: [{
            required: true,
            message: '请输入核销人',
            trigger: 'blur'
          }, ],
          code: [{
            required: true,
            message: '请输入劵码',
            trigger: 'blur'
          }, ],
          store: [{
            required: true,
            message: '请选择核销门店',
            trigger: 'change'
          }, ],
          type: [{
            required: true,
            message: '请选择券类型',
            trigger: 'change'
          }, ]
        },
        id: '',
        checkEntity: [],
        list:[],
        fourshopsName: ''
      }
    },
    mounted() {
      
      let userinfo = unescape(sessionStorage.getItem('userinfo'));
      if (userinfo) {
        userinfo = JSON.parse(userinfo);
        this.ruleForm.name = userinfo.name
      }
      this.getData()
    },
    
    methods: {
      async getData() {
        let res = await this.$get('/couponSys/couponVerification/create.json');
        if (res.errcode == 0) {
          this.fourshops = res.fourshops
          this.ruleForm.time = this.$format(res.verificationEntity.operateTime)
        }
      },
      async handleCheck() {
        this.$refs.ruleForm.validate(async(valid) => {
          if (valid) {
            let d = {
              code: this.ruleForm.code,
              type: this.ruleForm.type
            };
            let res = await this.$get('/couponSys/couponVerification/check.json', d);
            if (res.errcode == 0) {
              for (let i in this.fourshops) {
                if (this.fourshops[i]['PK_FOURSPOINTMG']+'' == this.ruleForm.store) {
                  this.fourshopsName = this.fourshops[i]['NAME']
                }
              }
              this.checkEntity = res.checkEntity
              this.addFormVisible = true;

            } else {
              this.$message.error(res.msg);         
            }

          } else {
            return false;
          }
        });


      },
      async handleSubmit() {
        this.list=[];
        for(let i=0;i<this.checkEntity.length;i++){
          let item={
            fkCouponSchemeId: this.checkEntity[i].fkCouponSchemeId,
            fkCouponId: this.checkEntity[i].id,
            fkMbeId: this.checkEntity[i].fkMbeId,
            operater: this.ruleForm.name,
            operateTime: this.ruleForm.time,
            fkFourshopId: this.ruleForm.store,
          }
          this.list.push(item)
        }
        
        let d = {
          content:{
            bCouponVerificationList:this.list
          }
          
        };
        let res = await this.$post('/couponSys/couponVerification/verification.json', d);
        if (res.errcode == 0) {
          this.$message.success('核销成功');
          this.addFormVisible = false;
          this.$parent.$parent.$data.currentName='second'
          eventBus.$emit('resetVerifylist')
        }else{
          this.$message.error(res.msg);
        }
      }
    }

  }

</script>

<style lang="scss" scoped>
  .btn-group {
    margin-top: 40px;
    text-align: center
  }

  .search-span {
    display: inline-block;
    width: 120px;
    text-align: right;
  }

  .card-box {
    font-size: 16px;
    line-height: 30px
  }

</style>
